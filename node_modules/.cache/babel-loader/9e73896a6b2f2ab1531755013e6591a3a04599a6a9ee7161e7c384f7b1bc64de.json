{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antoine\\\\Desktop\\\\hagimanga.github.io-main\\\\hagimanga.github.io-main\\\\hagimanga.github.io\\\\src\\\\ListeTests.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListeTests = () => {\n  _s();\n  const [tests, setTests] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8080/Backend/API?action=getTests').then(response => response.json()).then(data => setTests(data)).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Liste des Tests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tests.map(test => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"ID : \", test.id, \", Nom : \", test.nom]\n      }, test.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(ListeTests, \"FxEWQGYuZijDeGUIGSMauBw8Rzg=\");\n_c = ListeTests;\nexport default ListeTests;\nvar _c;\n$RefreshReg$(_c, \"ListeTests\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ListeTests","_s","tests","setTests","fetch","then","response","json","data","catch","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","test","id","nom","_c","$RefreshReg$"],"sources":["C:/Users/Antoine/Desktop/hagimanga.github.io-main/hagimanga.github.io-main/hagimanga.github.io/src/ListeTests.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst ListeTests = () => {\r\n  const [tests, setTests] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8080/Backend/API?action=getTests')\r\n      .then(response => response.json())\r\n      .then(data => setTests(data))\r\n      .catch(error => console.log(error));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Liste des Tests</h1>\r\n      <ul>\r\n        {tests.map(test => (\r\n          <li key={test.id}>\r\n            ID : {test.id}, Nom : {test.nom}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListeTests;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,mDAAmD,CAAC,CACvDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBlB,OAAA;MAAAc,QAAA,EACGX,KAAK,CAACgB,GAAG,CAACC,IAAI,iBACbpB,OAAA;QAAAc,QAAA,GAAkB,OACX,EAACM,IAAI,CAACC,EAAE,EAAC,UAAQ,EAACD,IAAI,CAACE,GAAG;MAAA,GADxBF,IAAI,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAChB,EAAA,CAtBID,UAAU;AAAAsB,EAAA,GAAVtB,UAAU;AAwBhB,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}